// Code generated by protoc-gen-go.
// source: datamsg.proto
// DO NOT EDIT!

package protomsg

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type DataMsg_Type int32

const (
	DataMsg_EVENT         DataMsg_Type = 0
	DataMsg_OP            DataMsg_Type = 1
	DataMsg_WRONG_OP_CODE DataMsg_Type = 2
)

var DataMsg_Type_name = map[int32]string{
	0: "EVENT",
	1: "OP",
	2: "WRONG_OP_CODE",
}
var DataMsg_Type_value = map[string]int32{
	"EVENT":         0,
	"OP":            1,
	"WRONG_OP_CODE": 2,
}

func (x DataMsg_Type) Enum() *DataMsg_Type {
	p := new(DataMsg_Type)
	*p = x
	return p
}
func (x DataMsg_Type) String() string {
	return proto.EnumName(DataMsg_Type_name, int32(x))
}
func (x *DataMsg_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataMsg_Type_value, data, "DataMsg_Type")
	if err != nil {
		return err
	}
	*x = DataMsg_Type(value)
	return nil
}

type DataMsg struct {
	Type             *DataMsg_Type `protobuf:"varint,1,req,name=type,enum=protomsg.DataMsg_Type" json:"type,omitempty"`
	Code             *int32        `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	Data             []byte        `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	OpSerial         *uint32       `protobuf:"varint,4,opt,name=op_serial" json:"op_serial,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DataMsg) Reset()         { *m = DataMsg{} }
func (m *DataMsg) String() string { return proto.CompactTextString(m) }
func (*DataMsg) ProtoMessage()    {}

func (m *DataMsg) GetType() DataMsg_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DataMsg_EVENT
}

func (m *DataMsg) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *DataMsg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DataMsg) GetOpSerial() uint32 {
	if m != nil && m.OpSerial != nil {
		return *m.OpSerial
	}
	return 0
}

func init() {
	proto.RegisterEnum("protomsg.DataMsg_Type", DataMsg_Type_name, DataMsg_Type_value)
}
